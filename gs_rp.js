function main() {
    // **Ph·∫ßn 1: L·∫•y d·ªØ li·ªáu chi·∫øn d·ªãch c√≥ ph√°t sinh chi ph√≠**
    var campaignQuery = "SELECT CampaignName, Clicks, Conversions, Cost " +
        "FROM CAMPAIGN_PERFORMANCE_REPORT " +
        "WHERE Impressions > 0 AND Cost > 0 " +
        "DURING TODAY";
    var campaignReport = AdsApp.report(campaignQuery);
    var campaignRows = campaignReport.rows();

    var campaignData = [];
    var totalClicks = 0;
    var totalConversions = 0;
    var totalCost = 0;

    while (campaignRows.hasNext()) {
        var row = campaignRows.next();
        var clicksVal = parseFloat(row["Clicks"].replace(/,/g, ''));
        var convVal = parseFloat(row["Conversions"].replace(/,/g, ''));
        var costVal = Math.round(parseFloat(row["Cost"].replace(/,/g, ''))); // L√†m tr√≤n chi ph√≠

        campaignData.push({
            campaignName: row["CampaignName"],
            clicks: clicksVal,
            conversions: convVal,
            cost: costVal
        });

        totalClicks += clicksVal;
        totalConversions += convVal;
        totalCost += costVal;
    }

    // **Ph·∫ßn 2: L·∫•y d·ªØ li·ªáu t·ª´ kh√≥a c√≥ CPC cao nh·∫•t**
    var keywordQuery = "SELECT CampaignName, AdGroupName, Criteria, Cost, Clicks " +
        "FROM KEYWORDS_PERFORMANCE_REPORT " +
        "WHERE Impressions > 0 AND Clicks > 0 " +
        "DURING TODAY";
    var keywordReport = AdsApp.report(keywordQuery);
    var keywordRows = keywordReport.rows();

    var keywordData = [];

    while (keywordRows.hasNext()) {
        var row = keywordRows.next();
        var costVal = Math.round(parseFloat(row["Cost"].replace(/,/g, ''))); // L√†m tr√≤n chi ph√≠
        var clicksVal = parseFloat(row["Clicks"].replace(/,/g, ''));
        var cpc = clicksVal > 0 ? costVal / clicksVal : 0;

        keywordData.push({
            campaignName: row["CampaignName"],
            adGroupName: row["AdGroupName"],
            keywordText: row["Criteria"],
            cpc: cpc
        });
    }

    // S·∫Øp x·∫øp t·ª´ kh√≥a theo CPC gi·∫£m d·∫ßn v√† l·∫•y top 5
    keywordData.sort(function (a, b) {
        return b.cpc - a.cpc;
    });
    var topKeywords = keywordData.slice(0, 5);

    // **Ph·∫ßn 3: T·∫°o v√† g·ª≠i b√°o c√°o qua webhook n·∫øu c√≥ d·ªØ li·ªáu**
    if (campaignData.length > 0 || topKeywords.length > 0) {
        // T·∫°o c√°c ph·∫ßn t·ª≠ cho card message
        var now = new Date();
        var formattedTime = now.toLocaleString('vi-VN', {
            timeZone: 'Asia/Ho_Chi_Minh', // ƒë·∫£m b·∫£o s·ª≠ d·ª•ng m√∫i gi·ªù Vi·ªát Nam
            year: 'numeric',
            month: '2-digit',
            day: '2-digit',
            hour: '2-digit',
            minute: '2-digit',
            second: '2-digit'
        });

        var reportTitle = "üìä B√ÅO C√ÅO QU·∫¢NG C√ÅO (H√îM NAY - " + formattedTime + ")";


        var cardElements = [
            {
                "tag": "div",
                "text": {
                    "tag": "lark_md",
                    "content": "<font color='blue'>**" + reportTitle + "**"
                }
            },
            {
                "tag": "hr"
            }
        ];

        // Th√™m b√°o c√°o top 5 t·ª´ kh√≥a c√≥ CPC cao nh·∫•t
        if (topKeywords.length > 0) {
            cardElements.push(
                {
                    "tag": "div",
                    "text": {
                        "tag": "lark_md",
                        "content": "<font color='green'>**üîù Top 5 t·ª´ kh√≥a c√≥ CPC cao nh·∫•t:**</font>"
                    }
                }
            );

            topKeywords.forEach(function (keyword, index) {
                var keywordStr =
                    "**Top " + (index + 1) + "**\n" +
                    "- **T·ª´ kh√≥a:** " + keyword.keywordText + "\n" +
                    "- **Chi·∫øn d·ªãch:** " + keyword.campaignName + "\n" +
                    "- **Nh√≥m qu·∫£ng c√°o:** " + keyword.adGroupName + "\n" +
                    "- **CPC:** " + keyword.cpc.toFixed(2) + "ƒë\n";
                cardElements.push(
                    {
                        "tag": "div",
                        "text": {
                            "tag": "lark_md",
                            "content": keywordStr
                        }
                    },

                );
            });
        }

        // Th√™m b√°o c√°o chi·∫øn d·ªãch c√≥ ph√°t sinh chi ph√≠
        if (campaignData.length > 0) {
            cardElements.push(
                {
                    "tag": "hr"
                },
                {
                    "tag": "div",
                    "text": {
                        "tag": "lark_md",
                        "content": "<font color='red'>**üí∏ T·ªïng chi ph√≠ chi·∫øn d·ªãch:**</font>"
                    }
                }
            );

            campaignData.forEach(function (item, index) {
                var contentStr =
                    "**Chi·∫øn d·ªãch:** " + item.campaignName + "\n" +
                    "- **L·∫ßn nh·∫•p:** " + item.clicks.toLocaleString() + "\n" +
                    "- **L∆∞·ª£t chuy·ªÉn ƒë·ªïi:** " + item.conversions.toLocaleString() + "\n" +
                    "- **Chi ph√≠:** " + item.cost.toLocaleString() + "ƒë\n";
                cardElements.push(
                    {
                        "tag": "div",
                        "text": {
                            "tag": "lark_md",
                            "content": "### B·∫£n ghi " + (index + 1)
                        }
                    },
                    {
                        "tag": "div",
                        "text": {
                            "tag": "lark_md",
                            "content": contentStr
                        }
                    }
                );
            });

            // Th√™m t·ªïng cu·ªëi c√πng cho chi·∫øn d·ªãch
            var totalStr =
                "<font color='purple'>**T·ªîNG CU·ªêI C√ôNG (Chi·∫øn d·ªãch)**</font>\n" +
                "- **T·ªïng L·∫ßn nh·∫•p:** " + totalClicks.toLocaleString() + "\n" +
                "- **T·ªïng L∆∞·ª£t chuy·ªÉn ƒë·ªïi:** " + totalConversions.toLocaleString() + "\n" +
                "- **T·ªïng Chi ph√≠:** " + totalCost.toLocaleString() + "ƒë\n";
            cardElements.push({
                "tag": "hr"
            }, {
                "tag": "div",
                "text": {
                    "tag": "lark_md",
                    "content": totalStr
                }
            });
        }

        // T·∫°o payload cho card message
        var cardPayload = {
            "msg_type": "interactive",
            "card": {
                "config": {
                    "wide_screen_mode": true
                },
                "elements": cardElements
            }
        };

        // URL webhook c·ªßa Lark (thay b·∫±ng URL th·ª±c t·∫ø c·ªßa b·∫°n)
        var webhookUrl = "https://open.larksuite.com/open-apis/bot/v2/hook/992413a8-ee5f-4a62-8742-aca039cf5263";

        // T√πy ch·ªçn cho y√™u c·∫ßu HTTP
        var optionsLark = {
            "method": "post",
            "contentType": "application/json",
            "payload": JSON.stringify(cardPayload)
        };

        // G·ª≠i b√°o c√°o qua webhook
        try {
            var responseLark = UrlFetchApp.fetch(webhookUrl, optionsLark);
            Logger.log("ƒê√£ g·ª≠i b√°o c√°o th√†nh c√¥ng: " + responseLark.getContentText());
        } catch (e) {
            Logger.log("G·ª≠i b√°o c√°o th·∫•t b·∫°i: " + e);
        }
    } else {
        Logger.log("Kh√¥ng c√≥ d·ªØ li·ªáu ƒë·ªÉ b√°o c√°o.");
    }
}